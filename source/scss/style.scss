// Подключение шрифтов
@font-face {
	font-family: Roboto;
	font-weight: 400;
	font-display: swap;
	src: local("Roboto"), url(../fonts/roboto-v29-latin_cyrillic-regular.woff2) format("woff2"),
		url(../fonts/roboto-v29-latin_cyrillic-regular.woff) format("woff");
}

@font-face {
	font-family: Roboto;
	font-weight: 500;
	font-display: swap;
	src: local("Roboto"), url(../fonts/roboto-v29-latin_cyrillic-500.woff2) format("woff2"),
		url(../fonts/roboto-v29-latin_cyrillic-500.woff) format("woff");
}

// Файл обнуляющих стилей
@import "_nullstyle";

body {
	height: 100%; //! 100vh
	min-width: 320px; //! дописали на интенсиве
	line-height: 1;
	font-size: 14px;
	font-weight: 400;
	font-family: Roboto, sans-serif;

	color: #ffffff;
	background-color: #000000;

	display: flex;
	flex-direction: column;
	justify-content: space-between;

	// &._lock {
	// 	overflow: hidden; //! добавляем класс "_lock" в JS для запрета прокрутки при активном меню-бургере
	// }
}

img {
	//! дописали на интенсиве: чтобы не ломались картинки
	max-width: 100%;
	// height: auto;  //! убрала, т.к. картинки из .slider-thumbs__image не той высоты, нужно применять к ним max-height: 100%; object-fit: cover;
}

//================================================================================================

// Подключение header
@import "_header";

//================================================================================================

// ОСНОВНОЙ БЛОК: CONTENT

//================================================================================================

//======== main ===============================================================================

.main {
	flex-grow: 1;
	position: relative; //! чтобы относительно этого main расположить абсолютный pagination
}

.main_index {
	display: flex;
	align-items: center;
	background-image: url(../img/main_index_bg.jpg);
	background-position: top; //! чтобы полностью влезла голова - при center не влезает
	background-size: cover;

	padding-left: 180px; //! отступ логотипа от края

	image-rendering: optimizeQuality; //! убираем баг с картинкой лого в Firefox

	@media (max-width: 1024px) {
		padding-left: 60px;
	}

	@media (max-width: 768px) {
		padding-left: 20px;
	}

	@media (max-width: 580px) {
		padding-left: 0px;
		padding-bottom: 64px; //! отступ логотипа от низа

		background-image: linear-gradient(0.11deg, rgba(0, 0, 0, 0.76) 32.14%, rgba(255, 0, 0, 0) 72.56%),
			url(../img/main_index_bg-mobile.jpg);

		align-items: flex-end;
		justify-content: center;
	}
}

.main__logo {
	animation: zoomIn 1s;

	@keyframes zoomIn {
		from {
			//! указываем только from, т.е. начальное состояние, т.к. конечное у нас уже есть
			transform: scale3d(0, 0, 0);
		}
	}

	@media (max-width: 768px) {
		width: 230px;
		height: auto;
	}

	@media (max-width: 580px) {
		width: 125px; //! а высота подстроится пропорционально - ранее прописали height: auto;
	}
}

.main_slider {
	//! так всё равно не по макету - не тот центр
	// display: flex;
	// align-items: center;
	// justify-content: center;

	//! чтобы убрать вертикальный скролл:
	height: calc(100% - 50px - 50px); //! вся высота минус хедер и минус футер

	overflow: hidden; //! так мы прячем пагинацию, которую сдвинули вниз
}

.slider-main {
	height: 100%; //! чтобы растянулся на всю высоту родителя - main_slider
	//! без этого не получится центровать, как я поняла
}

.slider-main__list {
}

.slider-main__item {
	display: flex;
	align-items: center;
	justify-content: center;
}

.slider-main__image {
	//! это можно и убрать, картинка тогда будет просто по центру благодаря записи в slider-main__item
	width: 100%; //! чтобы была на весь экран при большом разрешении
}

.pagination {
	position: absolute;
	z-index: 400;
	bottom: 0;
	left: 0;
	width: 100%;
	min-height: 144px; //! если просто height, то картинки не влезают и вываливаются на футер сверху

	background-color: #000000;

	padding-top: 5px; //! расстояние от верха до стрелочки минус 7рх(невидимый верхний бордер)
	padding-bottom: 17px; //! расстояние от картинок до футера
	padding-left: 20px; //! отступ безопасности при уменьшении экрана
	padding-right: 20px; //! отступ безопасности при уменьшении экрана

	//! уводим вниз весь блок пагинации на всю его высоту по оси У минус 20рх, чтобы была видна стрелка
	transform: translateY(calc(100% - 20px));
	transition: transform 0.5s ease-in-out;

	@media (max-width: 580px) {
		min-height: 67px;
		padding-top: 0px; //! расстояние от верха до стрелочки
		padding-bottom: 12px; //! расстояние от картинок до футера
	}
}

.pagination_active {
	//! добавляется при нажатии стрелочки (см. JS)
	transform: translateY(0); //! поднимаем пагинацию назад на её место - чтобы её стало видно

	padding-top: 12px; //! нужно увеличить, т.к. стрелка меняет направление и уходит невидимый верхний бордер
}

.pagination__arrow {
	display: block; //! потому что кнопка
	margin: 0 auto; //! чтобы отцентровать
	margin-bottom: 24px; //! 31рх(отступ по макету)-7рх(невидимый нижний бордер)

	width: 0;
	height: 0;
	border-left: 7px solid transparent; //! 7рх - это половина от 14рх - ширина треугольника по макету
	border-right: 7px solid transparent;
	border-top: 7px solid transparent;
	border-bottom: 7px solid #ffffff;

	background-color: transparent; //! потому что он у кнопки по умолчанию белый

	transition: border-color 0.3s ease-in-out;

	.pagination_active &:hover {
		border-top-color: #e90000;
		border-bottom-color: transparent;
	}

	&:hover {
		border-bottom-color: #e90000;
		// border-top-color: transparent;
	}

	@media (max-width: 580px) {
		margin-bottom: 5px; //! 12px(отступ по макету)-7рх(невидимый нижний бордер)
	}
}

//! эта запись означает, что когда будет класс pagination_active, то у pagination__arrow будут следующие параметры:
.pagination_active .pagination__arrow {
	border-bottom: 7px solid transparent;
	border-top: 7px solid #ffffff;
	//! так стрелка будет смотреть в другую сторону
}

.slider-thumbs {
	max-width: 820px;
}

.slider-thumbs__list {
}

.slider-thumbs__item {
}

.slider-thumbs__image {
	max-height: 100%; //! так не будут вылезать за границы своего контейнера (в секции video картинки выше, чем нужно)
	object-fit: cover; //! будут обрезаться, но красиво :)
}

.slider-main__video {
	height: 100%;
	width: 100%;
	object-fit: contain; //! не будет обрезаться, но не будет на всю ширину
	// object-fit: cover; //! будет обрезаться, зато будет на всю ширину
}

//========  =============================================================================

//========  ================================================================================

//================================================================================================

// Подключение footer
@import "_footer";
